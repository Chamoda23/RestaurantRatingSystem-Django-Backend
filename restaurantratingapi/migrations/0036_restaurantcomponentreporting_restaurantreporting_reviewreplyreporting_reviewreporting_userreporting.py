# Generated by Django 3.0.7 on 2020-07-06 02:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('restaurantratingapi', '0035_reporting'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserReporting',
            fields=[
                ('reporting', models.OneToOneField(db_column='reporting_id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='user_reporting_reporting', serialize=False, to='restaurantratingapi.Reporting')),
                ('reporte', models.ForeignKey(db_column='reporte_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_reporting_reporte', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_reporting',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ReviewReporting',
            fields=[
                ('reporting', models.OneToOneField(db_column='reporting_id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='review_reporting_reporting', serialize=False, to='restaurantratingapi.Reporting')),
                ('rating', models.ForeignKey(db_column='rating_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='review_reporting_rating', to='restaurantratingapi.Rating')),
            ],
            options={
                'db_table': 'review_reporting',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ReviewReplyReporting',
            fields=[
                ('reporting', models.OneToOneField(db_column='reporting_id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='review_reply_reporting_reporting', serialize=False, to='restaurantratingapi.Reporting')),
                ('reply', models.ForeignKey(db_column='reply_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='review_reply_reporting_reply', to='restaurantratingapi.Reply')),
            ],
            options={
                'db_table': 'review_reply_reporting',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RestaurantReporting',
            fields=[
                ('reporting', models.OneToOneField(db_column='reporting_id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='restaurant_reporting_reporting', serialize=False, to='restaurantratingapi.Reporting')),
                ('restaurant', models.ForeignKey(db_column='restaurant_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='restaurant_reporting_reporte', to='restaurantratingapi.Restaurant')),
            ],
            options={
                'db_table': 'restaurant_reporting',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RestaurantComponentReporting',
            fields=[
                ('reporting', models.OneToOneField(db_column='reporting_id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='resraurant_component_reporting_reporting', serialize=False, to='restaurantratingapi.Reporting')),
                ('component', models.ForeignKey(db_column='component_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='restaurant_component_reporting_component', to='restaurantratingapi.EditComponent')),
                ('restaurant', models.ForeignKey(db_column='restaurant_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='restaurant_component_reporting_reporte', to='restaurantratingapi.Restaurant')),
            ],
            options={
                'db_table': 'restaurant_component_reporting',
                'managed': True,
            },
        ),
    ]
